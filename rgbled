#!/usr/bin/sudo /usr/bin/python
import os, time, sys
try:
	import RPi.GPIO as GPIO
except ImportError:
	print('!!!!! cannot import GPIO',file=sys.stderr)
	sys.exit(1)

class RGBLed:
	common = 'cathode'
	colors = [0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF]
	pins = (27, 22, 23)
	freqs = (97, 101, 103)

	def __init__(self):
		if self.common=='cathode':
			self.igpiov = GPIO.LOW
			self.cnv = lambda v: 100*float(v&0xff)/255
		else:
			self.igpiov = GPIO.HIGH
			self.cnv = lambda v: 100 - 100 * float(v&0xff)/255
		GPIO.setmode(GPIO.BCM)
		GPIO.setup(self.pins, GPIO.OUT)  # Set pins' mode is output
		GPIO.output(self.pins, self.igpiov)

		pwms = [].append
		for i, (pin, freq) in enumerate(zip(self.pins,self.freqs)):
			pwm = GPIO.PWM(pin,freq)
			pwm.start(0) # leds off
			pwms(pwm)
		self.pwms = pwms.__self__

	def setColor(self,col):  # For example : col = 0x1122
		self.pwms[0].ChangeDutyCycle(self.cnv(col>>16))
		self.pwms[1].ChangeDutyCycle(self.cnv(col>>8))
		self.pwms[2].ChangeDutyCycle(self.cnv(col))

	def cleanup(self):
		self.pwms[0].stop()
		self.pwms[1].stop()
		self.pwms[2].stop()
		GPIO.output(self.pins, self.igpiov)	# Turn off all leds
		GPIO.cleanup()

_rgbled = RGBLed()
try:
	A = sys.argv[1:]
	if A:
		CD = zip(*[A[i::2] for i in range(2)])
		for c,d in CD:
			_rgbled.setColor(eval(c))
			time.sleep(float(d))
finally:
	_rgbled.cleanup()
